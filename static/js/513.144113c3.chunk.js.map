{"version":3,"file":"static/js/513.144113c3.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Table.js","pages/cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import { Button, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { increase, decrease, removeCart } from \"../store\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction Cart(){\r\n\r\n  let state = useSelector((state)=>{ return state })\r\n  let dispatch = useDispatch();\r\n  let navigate = useNavigate();\r\n  let total = 0;\r\n\r\n  return(\r\n    <div>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>금액</th>\r\n            <th>변경하기</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            state.cart.map((a, i)=>{\r\n              return (\r\n                <tr key={i}>\r\n                  <td>{state.cart[i].id}</td>\r\n                  <td><p style={{cursor:'pointer'}} onClick={() => {\r\n                    navigate('/detail/'+ state.cart[i].id);\r\n                    console.log('/detail/'+ state.cart[i].id)\r\n                  }}>{state.cart[i].name}</p></td>\r\n                  <td>{state.cart[i].count}</td>\r\n                  <td>{(state.cart[i].price * state.cart[i].count).toLocaleString('en')}</td>\r\n                  <td>\r\n                    <Button className=\"me-1\" onClick={()=>{\r\n                      dispatch(increase(state.cart[i].id));\r\n                      // console.log(state.cart[i].count)\r\n                    }}>+</Button>\r\n                    <Button className=\"ms-1\" onClick={()=>{\r\n                      dispatch(decrease(state.cart[i].id));\r\n                      // console.log(state.cart[i].count)\r\n                    }}>-</Button>\r\n                    <Button className=\"btn btn-danger ms-1\" onClick={()=>{\r\n                      dispatch(removeCart(state.cart[i].id));\r\n                    }}>삭제</Button>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })\r\n            \r\n          }\r\n          <tr>\r\n            <th></th>\r\n            <th></th>\r\n            <th>합계</th>\r\n            <th>\r\n            {state.cart.map((a, i)=>{\r\n              total = total + parseInt(state.cart[i].price * state.cart[i].count);\r\n              })}\r\n            {total.toLocaleString('en')}\r\n            </th>\r\n            <th><Button>주문하기</Button></th>\r\n          </tr>\r\n        </tbody>\r\n      </Table> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cart"],"names":["React","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","_jsx","_objectSpread","responsiveClass","children","state","useSelector","dispatch","useDispatch","navigate","useNavigate","total","_jsxs","Table","cart","map","a","i","id","style","cursor","onClick","console","log","name","count","price","toLocaleString","Button","increase","decrease","removeCart","parseInt"],"sourceRoot":""}